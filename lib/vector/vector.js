// Generated by CoffeeScript 1.6.3
(function() {
  var Vector;

  Vector = (function() {
    function Vector(x, y) {
      this.x = x;
      this.y = y;
    }

    Vector.prototype.getY = function() {
      return this.y;
    };

    Vector.prototype.getX = function() {
      return this.x;
    };

    Vector.prototype.add = function(v) {
      var nx, ny;
      nx = this.x + v.x;
      ny = this.y + v.y;
      return new Vector(nx, ny);
    };

    Vector.prototype.sub = function(v) {
      var nx, ny;
      nx = this.x - v.x;
      ny = this.y - v.y;
      return new Vector(nx, ny);
    };

    Vector.prototype.clone = function() {
      var nx, ny;
      nx = this.x;
      ny = this.y;
      return new Vector(this.x, this.y);
    };

    Vector.prototype.mult = function(m) {
      var nx, ny;
      nx = this.x * m;
      ny = this.y * m;
      return new Vector(nx, ny);
    };

    Vector.prototype.div = function(m) {
      return this.mult(1 / m);
    };

    Vector.prototype.mag = function() {
      return Math.sqrt(this.x * this.x + this.y * this.y);
    };

    Vector.prototype.roundMag = function() {
      var nx, ny;
      nx = Math.round(this.x);
      ny = Math.round(this.y);
      return Math.round(Math.sqrt(nx * nx + ny * ny));
    };

    Vector.prototype.heading = function() {
      return Math.atan2(this.y, this.x);
    };

    Vector.prototype.setMag = function(m) {
      return this.normalize().mult(m);
    };

    Vector.prototype.limit = function(l) {
      if (this.mag() < l) {
        return this.clone();
      } else {
        return this.setMag(l);
      }
    };

    Vector.prototype.normalize = function() {
      var m, nx, ny;
      m = this.mag();
      if (m !== 0) {
        nx = this.x / m;
        ny = this.y / m;
        return new Vector(nx, ny);
      } else {
        return this.clone();
      }
    };

    Vector.prototype.toString = function() {
      return "x: " + this.x + ", y: " + this.y;
    };

    return Vector;

  })();

  this.Vector = Vector;

}).call(this);
